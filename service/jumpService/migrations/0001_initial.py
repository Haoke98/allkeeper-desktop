# Generated by Django 4.2.3 on 2024-04-16 10:42

from django.db import migrations, models
import django.db.models.deletion
import simplepro.components.fields
import simplepro.components.fields.char_field
import simplepro.components.fields.input_password_field
import simplepro.editor.fields
import simplepro.lib.pkHelper


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Brand',
            fields=[
                ('createdAt', models.DateTimeField(auto_created=True, auto_now_add=True, db_index=True, null=True, verbose_name='创建时间')),
                ('id', models.CharField(default=simplepro.lib.pkHelper.uuid_generator, editable=False, max_length=48, primary_key=True, serialize=False)),
                ('updatedAt', models.DateTimeField(auto_now=True, db_index=True, null=True, verbose_name='最近更新时间')),
                ('deletedAt', models.DateTimeField(db_index=True, editable=False, null=True, verbose_name='被删除时间')),
                ('remark', models.CharField(blank=True, db_index=True, max_length=100, null=True, verbose_name='小备注/标签')),
                ('info', simplepro.editor.fields.UETextField(blank=True, null=True, verbose_name='说明')),
                ('name', simplepro.components.fields.char_field.CharField(max_length=100)),
            ],
            options={
                'ordering': ['-updatedAt'],
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='BT',
            fields=[
                ('createdAt', models.DateTimeField(auto_created=True, auto_now_add=True, db_index=True, null=True, verbose_name='创建时间')),
                ('id', models.CharField(default=simplepro.lib.pkHelper.uuid_generator, editable=False, max_length=48, primary_key=True, serialize=False)),
                ('updatedAt', models.DateTimeField(auto_now=True, db_index=True, null=True, verbose_name='最近更新时间')),
                ('deletedAt', models.DateTimeField(db_index=True, editable=False, null=True, verbose_name='被删除时间')),
                ('remark', models.CharField(blank=True, db_index=True, max_length=100, null=True, verbose_name='小备注/标签')),
                ('info', simplepro.editor.fields.UETextField(blank=True, null=True, verbose_name='说明')),
                ('port', models.PositiveIntegerField(default=8888, verbose_name='端口')),
                ('username', models.CharField(help_text='请输入用户名', max_length=32, null=True, verbose_name='用户')),
                ('pwd', simplepro.components.fields.input_password_field.PasswordInputField(max_length=32, null=True, verbose_name='密码')),
                ('basicAuthUsername', models.CharField(blank=True, max_length=32, null=True, verbose_name='BasicAuth用户')),
                ('basicAuthPwd', models.CharField(blank=True, max_length=32, null=True, verbose_name='BasicAuth密码')),
                ('path', models.CharField(blank=True, max_length=50, null=True, verbose_name='面板路径')),
                ('domain', models.URLField(blank=True, null=True, verbose_name='绑定的域名')),
            ],
            options={
                'verbose_name': '宝塔',
                'verbose_name_plural': '所有宝塔',
            },
        ),
        migrations.CreateModel(
            name='Channel',
            fields=[
                ('createdAt', models.DateTimeField(auto_created=True, auto_now_add=True, db_index=True, null=True, verbose_name='创建时间')),
                ('id', models.CharField(default=simplepro.lib.pkHelper.uuid_generator, editable=False, max_length=48, primary_key=True, serialize=False)),
                ('updatedAt', models.DateTimeField(auto_now=True, db_index=True, null=True, verbose_name='最近更新时间')),
                ('deletedAt', models.DateTimeField(db_index=True, editable=False, null=True, verbose_name='被删除时间')),
                ('remark', models.CharField(blank=True, db_index=True, max_length=100, null=True, verbose_name='小备注/标签')),
                ('info', simplepro.editor.fields.UETextField(blank=True, null=True, verbose_name='说明')),
            ],
            options={
                'verbose_name': '通道',
                'verbose_name_plural': '通道',
            },
        ),
        migrations.CreateModel(
            name='DbService',
            fields=[
                ('createdAt', models.DateTimeField(auto_created=True, auto_now_add=True, db_index=True, null=True, verbose_name='创建时间')),
                ('updatedAt', models.DateTimeField(auto_now=True, db_index=True, null=True, verbose_name='最近更新时间')),
                ('deletedAt', models.DateTimeField(db_index=True, editable=False, null=True, verbose_name='被删除时间')),
                ('info', simplepro.editor.fields.UETextField(blank=True, null=True, verbose_name='说明')),
                ('id', simplepro.components.fields.char_field.CharField(default=simplepro.lib.pkHelper.uuid_generator, editable=False, max_length=48, primary_key=True, serialize=False)),
                ('remark', models.CharField(blank=True, db_index=True, max_length=100, null=True, verbose_name='备注')),
                ('port', models.PositiveIntegerField(db_index=True, default=8888, verbose_name='端口')),
                ('path', models.TextField(blank=True, null=True, verbose_name='路径')),
                ('pwd', models.CharField(blank=True, max_length=48, null=True, verbose_name='root密码')),
                ('ttype', models.IntegerField(choices=[(0, 'MySQL'), (1, 'PostgreSQL')], db_index=True, default=0, verbose_name='数据库类型')),
            ],
            options={
                'verbose_name': '数据服务',
                'verbose_name_plural': '所有数据服务',
            },
        ),
        migrations.CreateModel(
            name='DbServiceUser',
            fields=[
                ('createdAt', models.DateTimeField(auto_created=True, auto_now_add=True, db_index=True, null=True, verbose_name='创建时间')),
                ('updatedAt', models.DateTimeField(auto_now=True, db_index=True, null=True, verbose_name='最近更新时间')),
                ('deletedAt', models.DateTimeField(db_index=True, editable=False, null=True, verbose_name='被删除时间')),
                ('remark', models.CharField(blank=True, db_index=True, max_length=100, null=True, verbose_name='小备注/标签')),
                ('info', simplepro.editor.fields.UETextField(blank=True, null=True, verbose_name='说明')),
                ('id', models.CharField(default=simplepro.lib.pkHelper.uuid_generator, max_length=48, primary_key=True, serialize=False)),
                ('owner', models.CharField(blank=True, max_length=50, null=True, verbose_name='使用者')),
                ('username', simplepro.components.fields.char_field.CharField(max_length=32, null=True, verbose_name='用户名')),
                ('password', simplepro.components.fields.input_password_field.PasswordInputField(max_length=32, null=True, verbose_name='密码')),
                ('hasRootPriority', models.BooleanField(blank=True, default=False, verbose_name='拥有root权限')),
            ],
            options={
                'verbose_name': '数据库用户',
                'verbose_name_plural': '所有数据库用户',
            },
        ),
        migrations.CreateModel(
            name='Device',
            fields=[
                ('createdAt', models.DateTimeField(auto_created=True, auto_now_add=True, db_index=True, null=True, verbose_name='创建时间')),
                ('updatedAt', models.DateTimeField(auto_now=True, db_index=True, null=True, verbose_name='最近更新时间')),
                ('deletedAt', models.DateTimeField(db_index=True, editable=False, null=True, verbose_name='被删除时间')),
                ('info', simplepro.editor.fields.UETextField(blank=True, null=True, verbose_name='说明')),
                ('id', simplepro.components.fields.char_field.CharField(default=simplepro.lib.pkHelper.uuid_generator, max_length=48, primary_key=True, serialize=False)),
                ('remark', simplepro.components.fields.char_field.CharField(blank=True, max_length=100, null=True, verbose_name='备注')),
            ],
            options={
                'verbose_name': '设备',
                'verbose_name_plural': '设备',
            },
        ),
        migrations.CreateModel(
            name='DeviceStatus',
            fields=[
                ('createdAt', models.DateTimeField(auto_created=True, auto_now_add=True, db_index=True, null=True, verbose_name='创建时间')),
                ('updatedAt', models.DateTimeField(auto_now=True, db_index=True, null=True, verbose_name='最近更新时间')),
                ('deletedAt', models.DateTimeField(db_index=True, editable=False, null=True, verbose_name='被删除时间')),
                ('remark', models.CharField(blank=True, db_index=True, max_length=100, null=True, verbose_name='小备注/标签')),
                ('info', simplepro.editor.fields.UETextField(blank=True, null=True, verbose_name='说明')),
                ('id', simplepro.components.fields.char_field.CharField(default=simplepro.lib.pkHelper.uuid_generator, max_length=48, primary_key=True, serialize=False)),
                ('content', models.CharField(max_length=100, verbose_name='状态内容')),
                ('ip', simplepro.components.fields.char_field.CharField(blank=True, max_length=50, null=True, verbose_name='IP地址')),
                ('errno', simplepro.components.fields.char_field.CharField(blank=True, max_length=50, null=True, verbose_name='错误代码')),
                ('errstr', models.TextField(blank=True, null=True, verbose_name='详细内容')),
            ],
            options={
                'verbose_name': '设备状态',
                'verbose_name_plural': '设备状态',
            },
        ),
        migrations.CreateModel(
            name='IPAddress',
            fields=[
                ('createdAt', models.DateTimeField(auto_created=True, auto_now_add=True, db_index=True, null=True, verbose_name='创建时间')),
                ('id', models.CharField(default=simplepro.lib.pkHelper.uuid_generator, editable=False, max_length=48, primary_key=True, serialize=False)),
                ('updatedAt', models.DateTimeField(auto_now=True, db_index=True, null=True, verbose_name='最近更新时间')),
                ('deletedAt', models.DateTimeField(db_index=True, editable=False, null=True, verbose_name='被删除时间')),
                ('remark', models.CharField(blank=True, db_index=True, max_length=100, null=True, verbose_name='小备注/标签')),
                ('info', simplepro.editor.fields.UETextField(blank=True, null=True, verbose_name='说明')),
                ('ip', simplepro.components.fields.char_field.CharField(max_length=15, null=True, verbose_name='IP地址')),
            ],
            options={
                'verbose_name': 'IPAddress',
                'verbose_name_plural': 'IPAddress',
            },
        ),
        migrations.CreateModel(
            name='Net',
            fields=[
                ('createdAt', models.DateTimeField(auto_created=True, auto_now_add=True, db_index=True, null=True, verbose_name='创建时间')),
                ('id', models.CharField(default=simplepro.lib.pkHelper.uuid_generator, editable=False, max_length=48, primary_key=True, serialize=False)),
                ('updatedAt', models.DateTimeField(auto_now=True, db_index=True, null=True, verbose_name='最近更新时间')),
                ('deletedAt', models.DateTimeField(db_index=True, editable=False, null=True, verbose_name='被删除时间')),
                ('info', simplepro.editor.fields.UETextField(blank=True, null=True, verbose_name='说明')),
                ('content', simplepro.components.fields.char_field.CharField(max_length=18, verbose_name='CIDR')),
                ('netmask', simplepro.components.fields.char_field.CharField(default='255.255.255.0', max_length=15, verbose_name='子网俺码')),
                ('remark', simplepro.components.fields.char_field.CharField(blank=True, max_length=100, null=True, verbose_name='备注')),
            ],
            options={
                'verbose_name': '网段',
                'verbose_name_plural': '网段',
                'ordering': ('-updatedAt',),
            },
        ),
        migrations.CreateModel(
            name='OperationSystem',
            fields=[
                ('createdAt', models.DateTimeField(auto_created=True, auto_now_add=True, db_index=True, null=True, verbose_name='创建时间')),
                ('id', models.CharField(default=simplepro.lib.pkHelper.uuid_generator, editable=False, max_length=48, primary_key=True, serialize=False)),
                ('updatedAt', models.DateTimeField(auto_now=True, db_index=True, null=True, verbose_name='最近更新时间')),
                ('deletedAt', models.DateTimeField(db_index=True, editable=False, null=True, verbose_name='被删除时间')),
                ('remark', models.CharField(blank=True, db_index=True, max_length=100, null=True, verbose_name='小备注/标签')),
                ('info', simplepro.editor.fields.UETextField(blank=True, null=True, verbose_name='说明')),
                ('rootUsername', models.CharField(default='root', max_length=32, verbose_name='root用户名')),
                ('rootPassword', simplepro.components.fields.input_password_field.PasswordInputField(max_length=32, null=True, verbose_name='root密码')),
            ],
            options={
                'verbose_name': '操作系统',
                'verbose_name_plural': '操作系统',
            },
        ),
        migrations.CreateModel(
            name='OperationSystemImage',
            fields=[
                ('createdAt', models.DateTimeField(auto_created=True, auto_now_add=True, db_index=True, null=True, verbose_name='创建时间')),
                ('updatedAt', models.DateTimeField(auto_now=True, db_index=True, null=True, verbose_name='最近更新时间')),
                ('deletedAt', models.DateTimeField(db_index=True, editable=False, null=True, verbose_name='被删除时间')),
                ('remark', models.CharField(blank=True, db_index=True, max_length=100, null=True, verbose_name='小备注/标签')),
                ('info', simplepro.editor.fields.UETextField(blank=True, null=True, verbose_name='说明')),
                ('id', simplepro.components.fields.char_field.CharField(default=simplepro.lib.pkHelper.uuid_generator, editable=False, max_length=48, primary_key=True, serialize=False)),
                ('name', simplepro.components.fields.char_field.CharField(max_length=50, verbose_name='名称')),
                ('version', simplepro.components.fields.char_field.CharField(max_length=50, verbose_name='版本')),
                ('isLTS', models.BooleanField(default=False, verbose_name='LTS')),
                ('arch', simplepro.components.fields.char_field.CharField(blank=True, help_text='什么架构?比如: 32bit or 64bit', max_length=50, null=True, verbose_name='ARCH')),
                ('iso', models.FileField(blank=True, null=True, upload_to='system_images', verbose_name='镜像')),
            ],
            options={
                'verbose_name': '操作系统镜像',
                'verbose_name_plural': '操作系统镜像',
            },
        ),
        migrations.CreateModel(
            name='Port',
            fields=[
                ('createdAt', models.DateTimeField(auto_created=True, auto_now_add=True, db_index=True, null=True, verbose_name='创建时间')),
                ('id', models.CharField(default=simplepro.lib.pkHelper.uuid_generator, editable=False, max_length=48, primary_key=True, serialize=False)),
                ('updatedAt', models.DateTimeField(auto_now=True, db_index=True, null=True, verbose_name='最近更新时间')),
                ('deletedAt', models.DateTimeField(db_index=True, editable=False, null=True, verbose_name='被删除时间')),
                ('remark', models.CharField(blank=True, db_index=True, max_length=100, null=True, verbose_name='小备注/标签')),
                ('info', simplepro.editor.fields.UETextField(blank=True, null=True, verbose_name='说明')),
                ('num', simplepro.components.fields.IntegerField(null=True)),
            ],
            options={
                'verbose_name': '端口',
                'verbose_name_plural': '端口',
            },
        ),
        migrations.CreateModel(
            name='PortMap',
            fields=[
                ('createdAt', models.DateTimeField(auto_created=True, auto_now_add=True, db_index=True, null=True, verbose_name='创建时间')),
                ('id', models.CharField(default=simplepro.lib.pkHelper.uuid_generator, editable=False, max_length=48, primary_key=True, serialize=False)),
                ('updatedAt', models.DateTimeField(auto_now=True, db_index=True, null=True, verbose_name='最近更新时间')),
                ('deletedAt', models.DateTimeField(db_index=True, editable=False, null=True, verbose_name='被删除时间')),
                ('remark', models.CharField(blank=True, db_index=True, max_length=100, null=True, verbose_name='小备注/标签')),
                ('info', simplepro.editor.fields.UETextField(blank=True, null=True, verbose_name='说明')),
                ('leftPort', simplepro.components.fields.IntegerField(blank=True, null=True)),
                ('rightPort', simplepro.components.fields.IntegerField(blank=True, null=True)),
            ],
            options={
                'verbose_name': '端口映射',
                'verbose_name_plural': '端口映射',
            },
        ),
        migrations.CreateModel(
            name='ServerRoom',
            fields=[
                ('createdAt', models.DateTimeField(auto_created=True, auto_now_add=True, db_index=True, null=True, verbose_name='创建时间')),
                ('id', models.CharField(default=simplepro.lib.pkHelper.uuid_generator, editable=False, max_length=48, primary_key=True, serialize=False)),
                ('updatedAt', models.DateTimeField(auto_now=True, db_index=True, null=True, verbose_name='最近更新时间')),
                ('deletedAt', models.DateTimeField(db_index=True, editable=False, null=True, verbose_name='被删除时间')),
                ('remark', models.CharField(blank=True, db_index=True, max_length=100, null=True, verbose_name='小备注/标签')),
                ('info', simplepro.editor.fields.UETextField(blank=True, null=True, verbose_name='说明')),
                ('code', simplepro.components.fields.char_field.CharField(max_length=50, null=True, unique=True, verbose_name='编号')),
            ],
            options={
                'verbose_name': '机房',
                'verbose_name_plural': '机房',
            },
        ),
        migrations.CreateModel(
            name='ServerStatus',
            fields=[
                ('createdAt', models.DateTimeField(auto_created=True, auto_now_add=True, db_index=True, null=True, verbose_name='创建时间')),
                ('updatedAt', models.DateTimeField(auto_now=True, db_index=True, null=True, verbose_name='最近更新时间')),
                ('deletedAt', models.DateTimeField(db_index=True, editable=False, null=True, verbose_name='被删除时间')),
                ('remark', models.CharField(blank=True, db_index=True, max_length=100, null=True, verbose_name='小备注/标签')),
                ('info', simplepro.editor.fields.UETextField(blank=True, null=True, verbose_name='说明')),
                ('id', simplepro.components.fields.char_field.CharField(default=simplepro.lib.pkHelper.uuid_generator, max_length=48, primary_key=True, serialize=False)),
                ('ip', simplepro.components.fields.char_field.CharField(blank=True, max_length=50, null=True, verbose_name='IP地址')),
                ('cpuUsage', simplepro.components.fields.IntegerField(blank=True, null=True, verbose_name='CPU使用率')),
                ('memoryUsage', simplepro.components.fields.IntegerField(blank=True, null=True, verbose_name='内存使用率')),
                ('diskUsage', simplepro.components.fields.IntegerField(blank=True, null=True, verbose_name='磁盘使用率')),
            ],
            options={
                'verbose_name': '服务器状态',
                'verbose_name_plural': '服务器状态',
                'ordering': ('-createdAt',),
            },
        ),
        migrations.CreateModel(
            name='Service',
            fields=[
                ('createdAt', models.DateTimeField(auto_created=True, auto_now_add=True, db_index=True, null=True, verbose_name='创建时间')),
                ('updatedAt', models.DateTimeField(auto_now=True, db_index=True, null=True, verbose_name='最近更新时间')),
                ('deletedAt', models.DateTimeField(db_index=True, editable=False, null=True, verbose_name='被删除时间')),
                ('info', simplepro.editor.fields.UETextField(blank=True, null=True, verbose_name='说明')),
                ('id', simplepro.components.fields.char_field.CharField(default=simplepro.lib.pkHelper.uuid_generator, editable=False, max_length=48, primary_key=True, serialize=False)),
                ('remark', models.CharField(blank=True, db_index=True, max_length=100, null=True, verbose_name='备注')),
                ('port', models.PositiveIntegerField(blank=True, db_index=True, null=True, verbose_name='端口')),
                ('sslOn', models.BooleanField(default=False, verbose_name='SSL')),
                ('dashboardPort', models.PositiveIntegerField(blank=True, db_index=True, null=True, verbose_name='Dashboard/Console端口')),
                ('dashboardPath', models.TextField(blank=True, null=True, verbose_name='路径')),
            ],
            options={
                'verbose_name': '服务',
                'verbose_name_plural': '服务',
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='ServiceType',
            fields=[
                ('createdAt', models.DateTimeField(auto_created=True, auto_now_add=True, db_index=True, null=True, verbose_name='创建时间')),
                ('updatedAt', models.DateTimeField(auto_now=True, db_index=True, null=True, verbose_name='最近更新时间')),
                ('deletedAt', models.DateTimeField(db_index=True, editable=False, null=True, verbose_name='被删除时间')),
                ('info', simplepro.editor.fields.UETextField(blank=True, null=True, verbose_name='说明')),
                ('id', simplepro.components.fields.char_field.CharField(default=simplepro.lib.pkHelper.uuid_generator, editable=False, max_length=48, primary_key=True, serialize=False)),
                ('remark', models.CharField(blank=True, db_index=True, max_length=100, null=True, verbose_name='备注')),
                ('name', simplepro.components.fields.char_field.CharField(max_length=50, verbose_name='名称')),
                ('defaultPort', simplepro.components.fields.IntegerField(blank=True, null=True, verbose_name='默认端口')),
                ('defaultSuperUsername', simplepro.components.fields.char_field.CharField(blank=True, max_length=50, null=True, verbose_name='默认超级用户名')),
                ('defaultSuperUserPwd', simplepro.components.fields.char_field.CharField(blank=True, max_length=50, null=True, verbose_name='默认超级用户密码')),
                ('doc', simplepro.components.fields.char_field.CharField(blank=True, max_length=500, null=True, verbose_name='文档地址')),
                ('official', simplepro.components.fields.char_field.CharField(blank=True, max_length=500, null=True, verbose_name='官网地址')),
                ('code', simplepro.components.fields.char_field.CharField(blank=True, max_length=500, null=True, verbose_name='源代码仓库地址')),
            ],
            options={
                'verbose_name': '服务类型',
                'verbose_name_plural': '服务类型',
            },
        ),
        migrations.CreateModel(
            name='SSHService',
            fields=[
                ('createdAt', models.DateTimeField(auto_created=True, auto_now_add=True, db_index=True, null=True, verbose_name='创建时间')),
                ('updatedAt', models.DateTimeField(auto_now=True, db_index=True, null=True, verbose_name='最近更新时间')),
                ('deletedAt', models.DateTimeField(db_index=True, editable=False, null=True, verbose_name='被删除时间')),
                ('info', simplepro.editor.fields.UETextField(blank=True, null=True, verbose_name='说明')),
                ('id', simplepro.components.fields.char_field.CharField(default=simplepro.lib.pkHelper.uuid_generator, editable=False, max_length=48, primary_key=True, serialize=False)),
                ('remark', models.CharField(blank=True, db_index=True, max_length=100, null=True, verbose_name='备注')),
                ('port', models.PositiveIntegerField(db_index=True, default=8888, verbose_name='端口')),
                ('path', models.TextField(blank=True, null=True, verbose_name='路径')),
            ],
            options={
                'verbose_name': 'SSH服务',
                'verbose_name_plural': 'SSH服务',
            },
        ),
        migrations.CreateModel(
            name='ElasticSearch',
            fields=[
                ('service_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='jumpService.service')),
                ('elasticPwd', models.CharField(max_length=36, null=True, verbose_name='elastic')),
                ('kibanaPwd', models.CharField(blank=True, max_length=36, null=True, verbose_name='kibana_system')),
                ('apmPwd', models.CharField(blank=True, max_length=36, null=True, verbose_name='apm_system')),
                ('logstashPwd', models.CharField(blank=True, max_length=36, null=True, verbose_name='logstash_system')),
                ('beatsPwd', models.CharField(blank=True, max_length=36, null=True, verbose_name='beats_system')),
                ('remoteMonitoringPwd', models.CharField(blank=True, max_length=36, null=True, verbose_name='remote_monitoring_user')),
            ],
            options={
                'verbose_name': 'ElasticSearch弹性检索引擎',
                'verbose_name_plural': 'ElasticSearch弹性检索引擎',
            },
            bases=('jumpService.service',),
        ),
        migrations.CreateModel(
            name='MinIO',
            fields=[
                ('service_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='jumpService.service')),
                ('console_port', simplepro.components.fields.IntegerField(verbose_name='Console端口')),
            ],
            options={
                'verbose_name': 'MinIO',
                'verbose_name_plural': 'MinIO',
            },
            bases=('jumpService.service',),
        ),
        migrations.CreateModel(
            name='NetDevice',
            fields=[
                ('device_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='jumpService.device')),
                ('mac', models.CharField(blank=True, max_length=17, null=True, verbose_name='MAC地址')),
            ],
            options={
                'verbose_name': '网络设备',
                'verbose_name_plural': '网络设备',
            },
            bases=('jumpService.device',),
        ),
        migrations.CreateModel(
            name='SSHServiceUser',
            fields=[
                ('createdAt', models.DateTimeField(auto_created=True, auto_now_add=True, db_index=True, null=True, verbose_name='创建时间')),
                ('updatedAt', models.DateTimeField(auto_now=True, db_index=True, null=True, verbose_name='最近更新时间')),
                ('deletedAt', models.DateTimeField(db_index=True, editable=False, null=True, verbose_name='被删除时间')),
                ('remark', models.CharField(blank=True, db_index=True, max_length=100, null=True, verbose_name='小备注/标签')),
                ('info', simplepro.editor.fields.UETextField(blank=True, null=True, verbose_name='说明')),
                ('id', models.CharField(default=simplepro.lib.pkHelper.uuid_generator, max_length=48, primary_key=True, serialize=False)),
                ('owner', models.CharField(blank=True, max_length=50, null=True, verbose_name='使用者')),
                ('username', simplepro.components.fields.char_field.CharField(max_length=32, null=True, verbose_name='用户名')),
                ('password', simplepro.components.fields.input_password_field.PasswordInputField(max_length=32, null=True, verbose_name='密码')),
                ('hasRootPriority', models.BooleanField(blank=True, default=False, verbose_name='拥有root权限')),
                ('group', simplepro.components.fields.IntegerField(blank=True, choices=[(0, 'root:x:0:'), (1, 'bin:x:1:'), (2, 'daemon:x:2:'), (3, 'sys:x:3:'), (4, 'adm:x:4:'), (5, 'tty:x:5:'), (6, 'disk:x:6:'), (7, 'lp:x:7:'), (8, 'mem:x:8:'), (9, 'kmem:x:9:'), (10, 'wheel:x:10:'), (11, 'cdrom:x:11:'), (12, 'mail:x:12:postfix'), (13, 'man:x:15:'), (14, 'dialout:x:18:'), (15, 'floppy:x:19:'), (16, 'games:x:20:'), (17, 'tape:x:33:')], null=True, verbose_name='用户组')),
                ('service', simplepro.components.fields.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='jumpService.sshservice', verbose_name='所属服务')),
            ],
            options={
                'verbose_name': 'SSH账号',
                'verbose_name_plural': 'SSH账号',
            },
        ),
        migrations.CreateModel(
            name='ServiceUser',
            fields=[
                ('createdAt', models.DateTimeField(auto_created=True, auto_now_add=True, db_index=True, null=True, verbose_name='创建时间')),
                ('id', models.CharField(default=simplepro.lib.pkHelper.uuid_generator, editable=False, max_length=48, primary_key=True, serialize=False)),
                ('updatedAt', models.DateTimeField(auto_now=True, db_index=True, null=True, verbose_name='最近更新时间')),
                ('deletedAt', models.DateTimeField(db_index=True, editable=False, null=True, verbose_name='被删除时间')),
                ('remark', models.CharField(blank=True, db_index=True, max_length=100, null=True, verbose_name='小备注/标签')),
                ('info', simplepro.editor.fields.UETextField(blank=True, null=True, verbose_name='说明')),
                ('owner', models.CharField(blank=True, max_length=50, null=True, verbose_name='使用者')),
                ('username', simplepro.components.fields.char_field.CharField(max_length=32, null=True, verbose_name='用户名')),
                ('password', simplepro.components.fields.input_password_field.PasswordInputField(max_length=32, null=True, verbose_name='密码')),
                ('hasRootPriority', models.BooleanField(blank=True, default=False, verbose_name='拥有root权限')),
                ('service', simplepro.components.fields.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='jumpService.service', verbose_name='服务')),
            ],
            options={
                'verbose_name': '服务用户',
                'verbose_name_plural': '服务用户',
                'abstract': False,
            },
        ),
        migrations.AddField(
            model_name='service',
            name='_type',
            field=simplepro.components.fields.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='jumpService.servicetype', verbose_name='服务类型'),
        ),
        migrations.AddField(
            model_name='service',
            name='system',
            field=simplepro.components.fields.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='jumpService.operationsystem', verbose_name='操作系统'),
        ),
        migrations.CreateModel(
            name='ServerCabinet',
            fields=[
                ('createdAt', models.DateTimeField(auto_created=True, auto_now_add=True, db_index=True, null=True, verbose_name='创建时间')),
                ('id', models.CharField(default=simplepro.lib.pkHelper.uuid_generator, editable=False, max_length=48, primary_key=True, serialize=False)),
                ('updatedAt', models.DateTimeField(auto_now=True, db_index=True, null=True, verbose_name='最近更新时间')),
                ('deletedAt', models.DateTimeField(db_index=True, editable=False, null=True, verbose_name='被删除时间')),
                ('remark', models.CharField(blank=True, db_index=True, max_length=100, null=True, verbose_name='小备注/标签')),
                ('info', simplepro.editor.fields.UETextField(blank=True, null=True, verbose_name='说明')),
                ('code', simplepro.components.fields.char_field.CharField(max_length=50, null=True, verbose_name='编号')),
                ('room', simplepro.components.fields.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='jumpService.serverroom', verbose_name='所属机房')),
            ],
            options={
                'verbose_name': '机柜',
                'verbose_name_plural': '机柜',
            },
        ),
        migrations.AddConstraint(
            model_name='operationsystemimage',
            constraint=models.UniqueConstraint(fields=('name', 'version', 'arch'), name='operation_system_name_version_unique'),
        ),
        migrations.AddField(
            model_name='operationsystem',
            name='image',
            field=simplepro.components.fields.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='jumpService.operationsystemimage', verbose_name='系统镜像'),
        ),
        migrations.AddField(
            model_name='ipaddress',
            name='net',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='jumpService.net', verbose_name='所属网段'),
        ),
        migrations.AddField(
            model_name='devicestatus',
            name='device',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='jumpService.device', verbose_name='所属设备'),
        ),
        migrations.AddField(
            model_name='device',
            name='brand',
            field=simplepro.components.fields.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='devices', to='jumpService.brand'),
        ),
        migrations.AddField(
            model_name='dbserviceuser',
            name='service',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='jumpService.dbservice', verbose_name='服务'),
        ),
        migrations.CreateModel(
            name='ServerNew',
            fields=[
                ('netdevice_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='jumpService.netdevice')),
                ('code', simplepro.components.fields.char_field.CharField(blank=True, max_length=50, null=True, unique=True, verbose_name='编号')),
                ('hoster', models.PositiveSmallIntegerField(blank=True, choices=[(1, '阿里云'), (2, '腾讯云'), (3, '哈密市希望科技有限公司'), (4, '新疆丝路融创网络科技有限公司（局域网）')], null=True, verbose_name='托管方')),
                ('bios', simplepro.components.fields.input_password_field.PasswordInputField(blank=True, max_length=32, null=True, verbose_name='BIOS')),
            ],
            options={
                'verbose_name': '服务器',
                'verbose_name_plural': '服务器',
            },
            bases=('jumpService.netdevice',),
        ),
        migrations.AddConstraint(
            model_name='service',
            constraint=models.UniqueConstraint(fields=('system', 'port'), name='service_server_port_unique'),
        ),
        migrations.AddConstraint(
            model_name='servercabinet',
            constraint=models.UniqueConstraint(fields=('code', 'room'), name='server_cabinet_room_unique'),
        ),
        migrations.AddField(
            model_name='portmap',
            name='left',
            field=simplepro.components.fields.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='left_ports', to='jumpService.netdevice'),
        ),
        migrations.AddField(
            model_name='portmap',
            name='right',
            field=simplepro.components.fields.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='right_ports', to='jumpService.netdevice'),
        ),
        migrations.AddField(
            model_name='port',
            name='host',
            field=simplepro.components.fields.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='ports', to='jumpService.netdevice'),
        ),
        migrations.AddField(
            model_name='ipaddress',
            name='device',
            field=models.ForeignKey(help_text='是指占用当前地址的网络设备', null=True, on_delete=django.db.models.deletion.CASCADE, related_name='ips', to='jumpService.netdevice', verbose_name='网络设备'),
        ),
        migrations.AddField(
            model_name='channel',
            name='left',
            field=simplepro.components.fields.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='channel_left', to='jumpService.netdevice'),
        ),
        migrations.AddField(
            model_name='channel',
            name='right',
            field=simplepro.components.fields.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='channel_right', to='jumpService.netdevice'),
        ),
        migrations.CreateModel(
            name='Router',
            fields=[
                ('servernew_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='jumpService.servernew')),
                ('adminAddress', simplepro.components.fields.char_field.CharField(max_length=255, verbose_name='管理页面访问地址')),
                ('adminPassword', simplepro.components.fields.input_password_field.PasswordInputField(max_length=32, null=True, verbose_name='管理页密码')),
            ],
            options={
                'verbose_name': '路由器',
                'verbose_name_plural': '路由器',
            },
            bases=('jumpService.servernew',),
        ),
        migrations.AddField(
            model_name='sshservice',
            name='server',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='SSHServices', to='jumpService.servernew', verbose_name='服务器'),
        ),
        migrations.AddField(
            model_name='serverstatus',
            name='server',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='jumpService.servernew', verbose_name='所属设备'),
        ),
        migrations.AddField(
            model_name='servernew',
            name='cabinet',
            field=simplepro.components.fields.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='jumpService.servercabinet', verbose_name='机柜'),
        ),
        migrations.AddConstraint(
            model_name='portmap',
            constraint=models.UniqueConstraint(fields=('left', 'right'), name='unique_p2p'),
        ),
        migrations.AddConstraint(
            model_name='portmap',
            constraint=models.UniqueConstraint(fields=('left', 'leftPort'), name='unique_left_port'),
        ),
        migrations.AddConstraint(
            model_name='portmap',
            constraint=models.UniqueConstraint(fields=('right', 'rightPort'), name='unique_right_port'),
        ),
        migrations.AddConstraint(
            model_name='port',
            constraint=models.UniqueConstraint(fields=('host', 'num'), name='unique_host_port'),
        ),
        migrations.AddField(
            model_name='operationsystem',
            name='server',
            field=simplepro.components.fields.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='systems', to='jumpService.servernew', verbose_name='服务器'),
        ),
        migrations.AddConstraint(
            model_name='ipaddress',
            constraint=models.UniqueConstraint(fields=('ip', 'net'), name='net_ip_unique'),
        ),
        migrations.AddField(
            model_name='dbservice',
            name='server',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='services', to='jumpService.servernew', verbose_name='服务器'),
        ),
        migrations.AddConstraint(
            model_name='channel',
            constraint=models.UniqueConstraint(fields=('left', 'right'), name='unique_channel_pair'),
        ),
        migrations.AddField(
            model_name='bt',
            name='server',
            field=models.OneToOneField(null=True, on_delete=django.db.models.deletion.CASCADE, to='jumpService.servernew', verbose_name='宿机'),
        ),
    ]
